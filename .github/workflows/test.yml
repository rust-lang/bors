## Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
name: Test

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432/test
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.80.0
          override: true
          components: clippy, rustfmt

      - uses: Swatinem/rust-cache@v2

      - name: Install sqlx-cli
        run: cargo install sqlx-cli@0.7.4 --no-default-features --features native-tls,postgres

      - name: Run SQLx migrations
        run: cargo sqlx database create && sqlx migrate run

      - name: Check .sqlx files
        run: cargo sqlx prepare --check -- --tests

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --all-targets

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all

      - name: Lint code
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  docker:
    name: Test Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build the Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: bors
          load: true
      - name: Run Docker image
        run: docker run bors --help
